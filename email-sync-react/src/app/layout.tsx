'use client'
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { useAtom } from "jotai";
import { kakaoOAuthSuccessAtom, gmailOAuthSuccessAtom, loginEmailAtom } from "./store/store";
import { useEffect } from "react";
import { getCookie } from "./lib/cookieUtil";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const [loginEmail, setLoginEmail] = useAtom(loginEmailAtom);
  const [gmailOAuthSuccess, setGmailOAuthSuccess] = useAtom(gmailOAuthSuccessAtom);
  const [kakaoOAuthSuccess, setKakaoOAuthSuccess] = useAtom(kakaoOAuthSuccessAtom);
  const apiUrl = process.env.NEXT_PUBLIC_API_URL;

  useEffect(() => {
    const token = getCookie('auth_token');
    if (token) {
      fetch(`${apiUrl}/auth/me`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      }).then(res => res.json()).then(data => {
        setLoginEmail(data.email);
        setGmailOAuthSuccess(data.gmailStatus);
        setKakaoOAuthSuccess(data.kakaoStatus);
      });
    }
  }, []);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
